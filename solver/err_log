+ turbulenceModels/Allwmake
+ wmake libso
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/typeInfo.H:58,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/token.H:50,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/UILListIO.C:31,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/UILList.H:478,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/ILList.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/IDLList.H:37,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/entry.H:48,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dictionary.H:101,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/baseIOdictionary.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/IOdictionary.H:44,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:44,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:40,
                 from sedIncompressibleTurbulenceModel.H:44,
                 from twophaseTurbulenceModels.C:28:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/TurbulenceModels/turbulenceModels/lnInclude/makeTurbulenceModel.H:117:10: error: redefinition of 'const Foam::word Foam::LESModels::fluidSmagorinsky<Foam::sedIncompressibleTurbulenceModel<Foam::singlePhaseTransportModel> >::typeName'
  117 |         (Foam::SType##Models::Type<Foam::BaseModel>, 0);                       \
      |          ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/className.H:94:24: note: in definition of macro 'defineTypeNameWithName'
   94 |     const ::Foam::word Type::typeName(Name)
      |                        ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/className.H:111:5: note: in expansion of macro 'defineTemplateTypeNameWithName'
  111 |     defineTemplateTypeNameWithName(Type, Type::typeName_())
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/className.H:134:5: note: in expansion of macro 'defineNamedTemplateTypeName'
  134 |     defineNamedTemplateTypeName(Type);                                         \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/TurbulenceModels/turbulenceModels/lnInclude/makeTurbulenceModel.H:116:5: note: in expansion of macro 'defineNamedTemplateTypeNameAndDebug'
  116 |     defineNamedTemplateTypeNameAndDebug                                        \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
twophaseTurbulenceModels.C:65:5: note: in expansion of macro 'makeTemplatedTurbulenceModel'
   65 |     makeTemplatedTurbulenceModel                                               \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
twophaseTurbulenceModels.C:111:1: note: in expansion of macro 'makeLESModel'
  111 | makeLESModel(fluidSmagorinsky);
      | ^~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/TurbulenceModels/turbulenceModels/lnInclude/makeTurbulenceModel.H:117:10: note: 'const Foam::word Foam::LESModels::fluidSmagorinsky<Foam::sedIncompressibleTurbulenceModel<Foam::singlePhaseTransportModel> >::typeName' previously declared here
  117 |         (Foam::SType##Models::Type<Foam::BaseModel>, 0);                       \
      |          ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/className.H:94:24: note: in definition of macro 'defineTypeNameWithName'
   94 |     const ::Foam::word Type::typeName(Name)
      |                        ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/className.H:111:5: note: in expansion of macro 'defineTemplateTypeNameWithName'
  111 |     defineTemplateTypeNameWithName(Type, Type::typeName_())
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/className.H:134:5: note: in expansion of macro 'defineNamedTemplateTypeName'
  134 |     defineNamedTemplateTypeName(Type);                                         \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/TurbulenceModels/turbulenceModels/lnInclude/makeTurbulenceModel.H:116:5: note: in expansion of macro 'defineNamedTemplateTypeNameAndDebug'
  116 |     defineNamedTemplateTypeNameAndDebug                                        \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
twophaseTurbulenceModels.C:65:5: note: in expansion of macro 'makeTemplatedTurbulenceModel'
   65 |     makeTemplatedTurbulenceModel                                               \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
twophaseTurbulenceModels.C:108:1: note: in expansion of macro 'makeLESModel'
  108 | makeLESModel(fluidSmagorinsky);
      | ^~~~~~~~~~~~
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/className.H:35,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/typeInfo.H:58,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/token.H:50,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/UILListIO.C:31,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/UILList.H:478,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/ILList.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/IDLList.H:37,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/entry.H:48,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dictionary.H:101,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/baseIOdictionary.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/IOdictionary.H:44,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:44,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:40,
                 from sedIncompressibleTurbulenceModel.H:44,
                 from twophaseTurbulenceModels.C:28:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/TurbulenceModels/turbulenceModels/lnInclude/makeTurbulenceModel.H:117:10: error: redefinition of 'int Foam::LESModels::fluidSmagorinsky<Foam::sedIncompressibleTurbulenceModel<Foam::singlePhaseTransportModel> >::debug'
  117 |         (Foam::SType##Models::Type<Foam::BaseModel>, 0);                       \
      |          ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/defineDebugSwitch.H:124:9: note: in definition of macro 'defineDebugSwitchWithName'
  124 |     int Type::debug(::Foam::debug::debugSwitch(Name, Value))
      |         ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/defineDebugSwitch.H:143:5: note: in expansion of macro 'defineTemplateDebugSwitchWithName'
  143 |     defineTemplateDebugSwitchWithName(Type, Type::typeName_(), Value)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/className.H:135:5: note: in expansion of macro 'defineNamedTemplateDebugSwitch'
  135 |     defineNamedTemplateDebugSwitch(Type, DebugSwitch)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/TurbulenceModels/turbulenceModels/lnInclude/makeTurbulenceModel.H:116:5: note: in expansion of macro 'defineNamedTemplateTypeNameAndDebug'
  116 |     defineNamedTemplateTypeNameAndDebug                                        \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
twophaseTurbulenceModels.C:65:5: note: in expansion of macro 'makeTemplatedTurbulenceModel'
   65 |     makeTemplatedTurbulenceModel                                               \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
twophaseTurbulenceModels.C:111:1: note: in expansion of macro 'makeLESModel'
  111 | makeLESModel(fluidSmagorinsky);
      | ^~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/TurbulenceModels/turbulenceModels/lnInclude/makeTurbulenceModel.H:117:10: note: 'int Foam::LESModels::fluidSmagorinsky<Foam::sedIncompressibleTurbulenceModel<Foam::singlePhaseTransportModel> >::debug' previously declared here
  117 |         (Foam::SType##Models::Type<Foam::BaseModel>, 0);                       \
      |          ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/defineDebugSwitch.H:124:9: note: in definition of macro 'defineDebugSwitchWithName'
  124 |     int Type::debug(::Foam::debug::debugSwitch(Name, Value))
      |         ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/defineDebugSwitch.H:143:5: note: in expansion of macro 'defineTemplateDebugSwitchWithName'
  143 |     defineTemplateDebugSwitchWithName(Type, Type::typeName_(), Value)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/className.H:135:5: note: in expansion of macro 'defineNamedTemplateDebugSwitch'
  135 |     defineNamedTemplateDebugSwitch(Type, DebugSwitch)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/TurbulenceModels/turbulenceModels/lnInclude/makeTurbulenceModel.H:116:5: note: in expansion of macro 'defineNamedTemplateTypeNameAndDebug'
  116 |     defineNamedTemplateTypeNameAndDebug                                        \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
twophaseTurbulenceModels.C:65:5: note: in expansion of macro 'makeTemplatedTurbulenceModel'
   65 |     makeTemplatedTurbulenceModel                                               \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
twophaseTurbulenceModels.C:108:1: note: in expansion of macro 'makeLESModel'
  108 | makeLESModel(fluidSmagorinsky);
      | ^~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/defineDebugSwitch.H:86:5: error: redefinition of 'const Foam::RegisterDebugSwitch<Foam::LESModels::fluidSmagorinsky<Foam::sedIncompressibleTurbulenceModel<Foam::singlePhaseTransportModel> > > Foam::RegisterDebugSwitch<Foam::LESModels::fluidSmagorinsky<Foam::sedIncompressibleTurbulenceModel<Foam::singlePhaseTransportModel> > >::registerDebugSwitch'
   86 |     Foam::RegisterDebugSwitch<Type>::registerDebugSwitch(Name)
      |     ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/defineDebugSwitch.H:134:5: note: in expansion of macro 'registerTemplateDebugSwitchWithName'
  134 |     registerTemplateDebugSwitchWithName(Type, Name)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/defineDebugSwitch.H:143:5: note: in expansion of macro 'defineTemplateDebugSwitchWithName'
  143 |     defineTemplateDebugSwitchWithName(Type, Type::typeName_(), Value)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/className.H:135:5: note: in expansion of macro 'defineNamedTemplateDebugSwitch'
  135 |     defineNamedTemplateDebugSwitch(Type, DebugSwitch)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/TurbulenceModels/turbulenceModels/lnInclude/makeTurbulenceModel.H:116:5: note: in expansion of macro 'defineNamedTemplateTypeNameAndDebug'
  116 |     defineNamedTemplateTypeNameAndDebug                                        \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
twophaseTurbulenceModels.C:65:5: note: in expansion of macro 'makeTemplatedTurbulenceModel'
   65 |     makeTemplatedTurbulenceModel                                               \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
twophaseTurbulenceModels.C:111:1: note: in expansion of macro 'makeLESModel'
  111 | makeLESModel(fluidSmagorinsky);
      | ^~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/defineDebugSwitch.H:86:5: note: 'const Foam::RegisterDebugSwitch<Foam::LESModels::fluidSmagorinsky<Foam::sedIncompressibleTurbulenceModel<Foam::singlePhaseTransportModel> > > Foam::RegisterDebugSwitch<Foam::LESModels::fluidSmagorinsky<Foam::sedIncompressibleTurbulenceModel<Foam::singlePhaseTransportModel> > >::registerDebugSwitch' previously declared here
   86 |     Foam::RegisterDebugSwitch<Type>::registerDebugSwitch(Name)
      |     ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/defineDebugSwitch.H:134:5: note: in expansion of macro 'registerTemplateDebugSwitchWithName'
  134 |     registerTemplateDebugSwitchWithName(Type, Name)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/defineDebugSwitch.H:143:5: note: in expansion of macro 'defineTemplateDebugSwitchWithName'
  143 |     defineTemplateDebugSwitchWithName(Type, Type::typeName_(), Value)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/className.H:135:5: note: in expansion of macro 'defineNamedTemplateDebugSwitch'
  135 |     defineNamedTemplateDebugSwitch(Type, DebugSwitch)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/TurbulenceModels/turbulenceModels/lnInclude/makeTurbulenceModel.H:116:5: note: in expansion of macro 'defineNamedTemplateTypeNameAndDebug'
  116 |     defineNamedTemplateTypeNameAndDebug                                        \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
twophaseTurbulenceModels.C:65:5: note: in expansion of macro 'makeTemplatedTurbulenceModel'
   65 |     makeTemplatedTurbulenceModel                                               \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
twophaseTurbulenceModels.C:108:1: note: in expansion of macro 'makeLESModel'
  108 | makeLESModel(fluidSmagorinsky);
      | ^~~~~~~~~~~~
In file included from twophaseTurbulenceModels.C:30:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/addToRunTimeSelectionTable.H:47:9: error: redefinition of 'Foam::LESModel<Foam::sedIncompressibleTurbulenceModel<Foam::singlePhaseTransportModel> >::adddictionaryConstructorToTable<Foam::LESModels::fluidSmagorinsky<Foam::sedIncompressibleTurbulenceModel<Foam::singlePhaseTransportModel> > > Foam::LESModels::addfluidSmagorinskyLESsinglePhaseTransportModelsedIncompressibleTurbulenceModeldictionaryConstructorToLESsinglePhaseTransportModelsedIncompressibleTurbulenceModelTable_'
   47 |         add##thisType##argNames##ConstructorTo##baseType##Table_
      |         ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/addToRunTimeSelectionTable.H:47:9: note: in definition of macro 'addToRunTimeSelectionTable'
   47 |         add##thisType##argNames##ConstructorTo##baseType##Table_
      |         ^~~
twophaseTurbulenceModels.C:65:5: note: in expansion of macro 'makeTemplatedTurbulenceModel'
   65 |     makeTemplatedTurbulenceModel                                               \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
twophaseTurbulenceModels.C:111:1: note: in expansion of macro 'makeLESModel'
  111 | makeLESModel(fluidSmagorinsky);
      | ^~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/addToRunTimeSelectionTable.H:47:9: note: 'Foam::LESModel<Foam::sedIncompressibleTurbulenceModel<Foam::singlePhaseTransportModel> >::adddictionaryConstructorToTable<Foam::LESModels::fluidSmagorinsky<Foam::sedIncompressibleTurbulenceModel<Foam::singlePhaseTransportModel> > > Foam::LESModels::addfluidSmagorinskyLESsinglePhaseTransportModelsedIncompressibleTurbulenceModeldictionaryConstructorToLESsinglePhaseTransportModelsedIncompressibleTurbulenceModelTable_' previously declared here
   47 |         add##thisType##argNames##ConstructorTo##baseType##Table_
      |         ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/addToRunTimeSelectionTable.H:47:9: note: in definition of macro 'addToRunTimeSelectionTable'
   47 |         add##thisType##argNames##ConstructorTo##baseType##Table_
      |         ^~~
twophaseTurbulenceModels.C:65:5: note: in expansion of macro 'makeTemplatedTurbulenceModel'
   65 |     makeTemplatedTurbulenceModel                                               \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
twophaseTurbulenceModels.C:108:1: note: in expansion of macro 'makeLESModel'
  108 | makeLESModel(fluidSmagorinsky);
      | ^~~~~~~~~~~~
In file included from twophaseTurbulenceModels.C:92:
lnInclude/twophasekOmegaVeg.C: In instantiation of 'Foam::RASModels::twophasekOmegaVeg<BasicTurbulenceModel>::twophasekOmegaVeg(const alphaField&, const rhoField&, const volVectorField&, const surfaceScalarField&, const surfaceScalarField&, const transportModel&, const Foam::word&, const Foam::word&) [with BasicTurbulenceModel = Foam::sedIncompressibleTurbulenceModel<Foam::singlePhaseTransportModel>; Foam::RASModels::twophasekOmegaVeg<BasicTurbulenceModel>::alphaField = Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>; Foam::RASModels::twophasekOmegaVeg<BasicTurbulenceModel>::rhoField = Foam::geometricOneField; Foam::volVectorField = Foam::GeometricField<Foam::Vector<float>, Foam::fvPatchField, Foam::volMesh>; Foam::surfaceScalarField = Foam::GeometricField<float, Foam::fvsPatchField, Foam::surfaceMesh>; Foam::RASModels::twophasekOmegaVeg<BasicTurbulenceModel>::transportModel = Foam::singlePhaseTransportModel]':
/opt/openfoam/2312plus/OpenFOAM-v2312/src/TurbulenceModels/turbulenceModels/lnInclude/RASModel.H:132:9:   required from 'static Foam::autoPtr<Foam::RASModel<BasicTurbulenceModel> > Foam::RASModel<BasicTurbulenceModel>::adddictionaryConstructorToTable<RASModelType>::New(const alphaField&, const rhoField&, const volVectorField&, const surfaceScalarField&, const surfaceScalarField&, const transportModel&, const Foam::word&) [with RASModelType = Foam::RASModels::twophasekOmegaVeg<Foam::sedIncompressibleTurbulenceModel<Foam::singlePhaseTransportModel> >; BasicTurbulenceModel = Foam::sedIncompressibleTurbulenceModel<Foam::singlePhaseTransportModel>; Foam::RASModel<BasicTurbulenceModel>::alphaField = Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>; Foam::RASModel<BasicTurbulenceModel>::rhoField = Foam::geometricOneField; Foam::volVectorField = Foam::GeometricField<Foam::Vector<float>, Foam::fvPatchField, Foam::volMesh>; Foam::surfaceScalarField = Foam::GeometricField<float, Foam::fvsPatchField, Foam::surfaceMesh>; Foam::RASModel<BasicTurbulenceModel>::transportModel = Foam::singlePhaseTransportModel]'
/opt/openfoam/2312plus/OpenFOAM-v2312/src/TurbulenceModels/turbulenceModels/lnInclude/RASModel.H:132:9:   required from 'Foam::RASModel<BasicTurbulenceModel>::adddictionaryConstructorToTable<RASModelType>::adddictionaryConstructorToTable(const Foam::word&) [with RASModelType = Foam::RASModels::twophasekOmegaVeg<Foam::sedIncompressibleTurbulenceModel<Foam::singlePhaseTransportModel> >; BasicTurbulenceModel = Foam::sedIncompressibleTurbulenceModel<Foam::singlePhaseTransportModel>]'
twophaseTurbulenceModels.C:93:1:   required from here
lnInclude/twophasekOmegaVeg.H:151:28: warning: 'Foam::RASModels::twophasekOmegaVeg<Foam::sedIncompressibleTurbulenceModel<Foam::singlePhaseTransportModel> >::kw_' will be initialized after [-Wreorder]
  151 |             volScalarField kw_;
      |                            ^~~
lnInclude/twophasekOmegaVeg.H:148:28: warning:   'Foam::volScalarField Foam::RASModels::twophasekOmegaVeg<Foam::sedIncompressibleTurbulenceModel<Foam::singlePhaseTransportModel> >::omega_' [-Wreorder]
  148 |             volScalarField omega_;
      |                            ^~~~~~
In file included from lnInclude/twophasekOmegaVeg.H:291,
                 from twophaseTurbulenceModels.C:92:
lnInclude/twophasekOmegaVeg.C:66:1: warning:   when initialized here [-Wreorder]
   66 | twophasekOmegaVeg<BasicTurbulenceModel>::twophasekOmegaVeg
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from lnInclude/fluidSmagorinsky.H:169,
                 from twophaseTurbulenceModels.C:107:
lnInclude/fluidSmagorinsky.C: In instantiation of 'void Foam::LESModels::fluidSmagorinsky<BasicTurbulenceModel>::correct() [with BasicTurbulenceModel = Foam::sedIncompressibleTurbulenceModel<Foam::singlePhaseTransportModel>]':
lnInclude/fluidSmagorinsky.C:154:6:   required from here
lnInclude/fluidSmagorinsky.C:162:23: warning: unused variable 'alpha' [-Wunused-variable]
  162 |     const alphaField& alpha = this->alpha_;
      |                       ^~~~~
lnInclude/fluidSmagorinsky.C:163:21: warning: unused variable 'rho' [-Wunused-variable]
  163 |     const rhoField& rho = this->rho_;
      |                     ^~~
lnInclude/fluidSmagorinsky.C:164:31: warning: unused variable 'alphaRhoPhi' [-Wunused-variable]
  164 |     const surfaceScalarField& alphaRhoPhi = this->alphaRhoPhi_;
      |                               ^~~~~~~~~~~
lnInclude/fluidSmagorinsky.C:165:27: warning: unused variable 'U' [-Wunused-variable]
  165 |     const volVectorField& U = this->U_;
      |                           ^
lnInclude/fluidSmagorinsky.C:166:18: warning: unused variable 'fvOptions' [-Wunused-variable]
  166 |     fv::options& fvOptions(fv::options::New(this->mesh_));
      |                  ^~~~~~~~~
In file included from lnInclude/partSmagorinsky.H:169,
                 from twophaseTurbulenceModels.C:104:
lnInclude/partSmagorinsky.C: In instantiation of 'void Foam::LESModels::partSmagorinsky<BasicTurbulenceModel>::correct() [with BasicTurbulenceModel = Foam::sedIncompressibleTurbulenceModel<Foam::singlePhaseTransportModel>]':
lnInclude/partSmagorinsky.C:154:6:   required from here
lnInclude/partSmagorinsky.C:162:23: warning: unused variable 'alpha' [-Wunused-variable]
  162 |     const alphaField& alpha = this->alpha_;
      |                       ^~~~~
lnInclude/partSmagorinsky.C:163:21: warning: unused variable 'rho' [-Wunused-variable]
  163 |     const rhoField& rho = this->rho_;
      |                     ^~~
lnInclude/partSmagorinsky.C:164:31: warning: unused variable 'alphaRhoPhi' [-Wunused-variable]
  164 |     const surfaceScalarField& alphaRhoPhi = this->alphaRhoPhi_;
      |                               ^~~~~~~~~~~
lnInclude/partSmagorinsky.C:165:27: warning: unused variable 'U' [-Wunused-variable]
  165 |     const volVectorField& U = this->U_;
      |                           ^
lnInclude/partSmagorinsky.C:166:18: warning: unused variable 'fvOptions' [-Wunused-variable]
  166 |     fv::options& fvOptions(fv::options::New(this->mesh_));
      |                  ^~~~~~~~~
In file included from lnInclude/twophaseMixingLengthBerzi.H:187,
                 from twophaseTurbulenceModels.C:86:
lnInclude/twophaseMixingLengthBerzi.C: In instantiation of 'void Foam::RASModels::twophaseMixingLengthBerzi<BasicTurbulenceModel>::correct() [with BasicTurbulenceModel = Foam::sedIncompressibleTurbulenceModel<Foam::singlePhaseTransportModel>]':
lnInclude/twophaseMixingLengthBerzi.C:165:6:   required from here
lnInclude/twophaseMixingLengthBerzi.C:198:12: warning: unused variable 'dY' [-Wunused-variable]
  198 |     scalar dY;
      |            ^~
lnInclude/twophaseMixingLengthBerzi.C:200:12: warning: unused variable 'kappaLMs' [-Wunused-variable]
  200 |     scalar kappaLMs(kappaLM_.value());
      |            ^~~~~~~~
lnInclude/twophaseMixingLengthBerzi.C:203:12: warning: unused variable 'LmPhi' [-Wunused-variable]
  203 |     scalar LmPhi(0.);
      |            ^~~~~
make: *** [/opt/openfoam/2312plus/OpenFOAM-v2312/wmake/rules/General/transform:38: Make/linux64GccSPDPInt32Opt/twophaseTurbulenceModels.o] Error 1
+ [ -f wallFunctions/Allwmake ]
+ echo Missing: wallFunctions/Allwmake
+ wmake libso phaseModel
+ wmake libso interfacialModels
dragModels/Engelund/Engelund.C: In member function 'virtual Foam::tmp<Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh> > Foam::Engelund::K(const volScalarField&) const':
dragModels/Engelund/Engelund.C:77:25: error: no matching function for call to 'max(Foam::volScalarField&, double)'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/label.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/UILList.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/ILList.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/IDLList.H:37,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/entry.H:48,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dictionary.H:101,
                 from lnInclude/dragModel.H:40,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: 'int8_t Foam::max(int8_t, int8_t)'
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/int.H:65:1: note: in expansion of macro 'MAXMIN'
   65 | MAXMIN(int8_t, int8_t, int8_t)
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'int8_t' {aka 'signed char'}
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/int.H:65:1: note: in expansion of macro 'MAXMIN'
   65 | MAXMIN(int8_t, int8_t, int8_t)
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: 'int16_t Foam::max(int16_t, int16_t)'
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/int.H:66:1: note: in expansion of macro 'MAXMIN'
   66 | MAXMIN(int16_t, int16_t, int16_t)
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'int16_t' {aka 'short int'}
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/int.H:66:1: note: in expansion of macro 'MAXMIN'
   66 | MAXMIN(int16_t, int16_t, int16_t)
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: 'int32_t Foam::max(int32_t, int32_t)'
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/int.H:68:1: note: in expansion of macro 'MAXMIN'
   68 | MAXMIN(int32_t, int32_t, int32_t)
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'int32_t' {aka 'int'}
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/int.H:68:1: note: in expansion of macro 'MAXMIN'
   68 | MAXMIN(int32_t, int32_t, int32_t)
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: 'int64_t Foam::max(int64_t, int32_t)'
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/int.H:69:1: note: in expansion of macro 'MAXMIN'
   69 | MAXMIN(int64_t, int64_t, int32_t)
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'int64_t' {aka 'long int'}
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/int.H:69:1: note: in expansion of macro 'MAXMIN'
   69 | MAXMIN(int64_t, int64_t, int32_t)
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: 'int64_t Foam::max(int32_t, int64_t)'
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/int.H:70:1: note: in expansion of macro 'MAXMIN'
   70 | MAXMIN(int64_t, int32_t, int64_t)
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'int32_t' {aka 'int'}
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/int.H:70:1: note: in expansion of macro 'MAXMIN'
   70 | MAXMIN(int64_t, int32_t, int64_t)
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: 'int64_t Foam::max(int64_t, int64_t)'
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/int.H:71:1: note: in expansion of macro 'MAXMIN'
   71 | MAXMIN(int64_t, int64_t, int64_t)
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'int64_t' {aka 'long int'}
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/int.H:71:1: note: in expansion of macro 'MAXMIN'
   71 | MAXMIN(int64_t, int64_t, int64_t)
      | ^~~~~~
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uLabel.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/UILList.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/ILList.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/IDLList.H:37,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/entry.H:48,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dictionary.H:101,
                 from lnInclude/dragModel.H:40,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: 'uint8_t Foam::max(uint8_t, uint8_t)'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:65:1: note: in expansion of macro 'MAXMIN'
   65 | MAXMIN(uint8_t, uint8_t, uint8_t)
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'uint8_t' {aka 'unsigned char'}
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:65:1: note: in expansion of macro 'MAXMIN'
   65 | MAXMIN(uint8_t, uint8_t, uint8_t)
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: 'uint16_t Foam::max(uint16_t, uint16_t)'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:66:1: note: in expansion of macro 'MAXMIN'
   66 | MAXMIN(uint16_t, uint16_t, uint16_t)
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'uint16_t' {aka 'short unsigned int'}
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:66:1: note: in expansion of macro 'MAXMIN'
   66 | MAXMIN(uint16_t, uint16_t, uint16_t)
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: 'uint32_t Foam::max(uint32_t, uint32_t)'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:68:1: note: in expansion of macro 'MAXMIN'
   68 | MAXMIN(uint32_t, uint32_t, uint32_t)
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'uint32_t' {aka 'unsigned int'}
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:68:1: note: in expansion of macro 'MAXMIN'
   68 | MAXMIN(uint32_t, uint32_t, uint32_t)
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: 'uint64_t Foam::max(uint64_t, uint32_t)'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:69:1: note: in expansion of macro 'MAXMIN'
   69 | MAXMIN(uint64_t, uint64_t, uint32_t)
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'uint64_t' {aka 'long unsigned int'}
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:69:1: note: in expansion of macro 'MAXMIN'
   69 | MAXMIN(uint64_t, uint64_t, uint32_t)
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: 'uint64_t Foam::max(uint32_t, uint64_t)'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:70:1: note: in expansion of macro 'MAXMIN'
   70 | MAXMIN(uint64_t, uint32_t, uint64_t)
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'uint32_t' {aka 'unsigned int'}
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:70:1: note: in expansion of macro 'MAXMIN'
   70 | MAXMIN(uint64_t, uint32_t, uint64_t)
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: 'uint64_t Foam::max(uint64_t, uint64_t)'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:71:1: note: in expansion of macro 'MAXMIN'
   71 | MAXMIN(uint64_t, uint64_t, uint64_t)
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'uint64_t' {aka 'long unsigned int'}
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:71:1: note: in expansion of macro 'MAXMIN'
   71 | MAXMIN(uint64_t, uint64_t, uint64_t)
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: 'double Foam::max(double, double)'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro 'MAXMIN'
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:55:1: note: in expansion of macro 'MAXMINPOW'
   55 | MAXMINPOW(double, double, double)
      | ^~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'double'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro 'MAXMIN'
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:55:1: note: in expansion of macro 'MAXMINPOW'
   55 | MAXMINPOW(double, double, double)
      | ^~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: 'double Foam::max(double, float)'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro 'MAXMIN'
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:56:1: note: in expansion of macro 'MAXMINPOW'
   56 | MAXMINPOW(double, double, float)
      | ^~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'double'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro 'MAXMIN'
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:56:1: note: in expansion of macro 'MAXMINPOW'
   56 | MAXMINPOW(double, double, float)
      | ^~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: 'double Foam::max(float, double)'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro 'MAXMIN'
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:57:1: note: in expansion of macro 'MAXMINPOW'
   57 | MAXMINPOW(double, float, double)
      | ^~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'float'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro 'MAXMIN'
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:57:1: note: in expansion of macro 'MAXMINPOW'
   57 | MAXMINPOW(double, float, double)
      | ^~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: 'double Foam::max(double, int)'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro 'MAXMIN'
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:58:1: note: in expansion of macro 'MAXMINPOW'
   58 | MAXMINPOW(double, double, int)
      | ^~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'double'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro 'MAXMIN'
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:58:1: note: in expansion of macro 'MAXMINPOW'
   58 | MAXMINPOW(double, double, int)
      | ^~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: 'double Foam::max(int, double)'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro 'MAXMIN'
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:59:1: note: in expansion of macro 'MAXMINPOW'
   59 | MAXMINPOW(double, int, double)
      | ^~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'int'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro 'MAXMIN'
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:59:1: note: in expansion of macro 'MAXMINPOW'
   59 | MAXMINPOW(double, int, double)
      | ^~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: 'double Foam::max(double, long int)'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro 'MAXMIN'
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:60:1: note: in expansion of macro 'MAXMINPOW'
   60 | MAXMINPOW(double, double, long)
      | ^~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'double'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro 'MAXMIN'
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:60:1: note: in expansion of macro 'MAXMINPOW'
   60 | MAXMINPOW(double, double, long)
      | ^~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: 'double Foam::max(long int, double)'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro 'MAXMIN'
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:61:1: note: in expansion of macro 'MAXMINPOW'
   61 | MAXMINPOW(double, long, double)
      | ^~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'long int'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro 'MAXMIN'
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:61:1: note: in expansion of macro 'MAXMINPOW'
   61 | MAXMINPOW(double, long, double)
      | ^~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: 'float Foam::max(float, float)'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro 'MAXMIN'
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:62:1: note: in expansion of macro 'MAXMINPOW'
   62 | MAXMINPOW(float, float, float)
      | ^~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'float'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro 'MAXMIN'
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:62:1: note: in expansion of macro 'MAXMINPOW'
   62 | MAXMINPOW(float, float, float)
      | ^~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: 'float Foam::max(float, int)'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro 'MAXMIN'
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:63:1: note: in expansion of macro 'MAXMINPOW'
   63 | MAXMINPOW(float, float, int)
      | ^~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'float'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro 'MAXMIN'
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:63:1: note: in expansion of macro 'MAXMINPOW'
   63 | MAXMINPOW(float, float, int)
      | ^~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: 'float Foam::max(int, float)'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro 'MAXMIN'
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:64:1: note: in expansion of macro 'MAXMINPOW'
   64 | MAXMINPOW(float, int, float)
      | ^~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'int'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro 'MAXMIN'
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:64:1: note: in expansion of macro 'MAXMINPOW'
   64 | MAXMINPOW(float, int, float)
      | ^~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: 'float Foam::max(float, long int)'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro 'MAXMIN'
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:65:1: note: in expansion of macro 'MAXMINPOW'
   65 | MAXMINPOW(float, float, long)
      | ^~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'float'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro 'MAXMIN'
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:65:1: note: in expansion of macro 'MAXMINPOW'
   65 | MAXMINPOW(float, float, long)
      | ^~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: 'float Foam::max(long int, float)'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro 'MAXMIN'
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:66:1: note: in expansion of macro 'MAXMINPOW'
   66 | MAXMINPOW(float, long, float)
      | ^~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'long int'
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro 'MAXMIN'
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/doubleFloat.H:66:1: note: in expansion of macro 'MAXMINPOW'
   66 | MAXMINPOW(float, long, float)
      | ^~~~~~~~~
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/zero.H:129,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/HashTable.H:95,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/runTimeSelectionTables.H:47,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/token.H:53,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/UILListIO.C:31,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/UILList.H:478,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/ILList.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/IDLList.H:37,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/entry.H:48,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dictionary.H:101,
                 from lnInclude/dragModel.H:40,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/zeroI.H:116:13: note: candidate: 'Foam::zero Foam::max(const Foam::zero&, const Foam::zero&)'
  116 | inline zero max(const zero&, const zero&)
      |             ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/zeroI.H:116:17: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'const Foam::zero&'
  116 | inline zero max(const zero&, const zero&)
      |                 ^~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/zeroI.H:122:13: note: candidate: 'template<class Type> Type Foam::max(const Foam::zero&, const Type&)'
  122 | inline Type max(const zero&, const Type& t)
      |             ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/zeroI.H:122:13: note:   template argument deduction/substitution failed:
dragModels/Engelund/Engelund.C:77:16: note:   cannot convert 'Cds' (type 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'}) to type 'const Foam::zero&'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                ^~~
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/zero.H:129,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/HashTable.H:95,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/runTimeSelectionTables.H:47,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/token.H:53,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/UILListIO.C:31,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/UILList.H:478,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/ILList.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/IDLList.H:37,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/entry.H:48,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dictionary.H:101,
                 from lnInclude/dragModel.H:40,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/zeroI.H:128:13: note: candidate: 'template<class Type> Type Foam::max(const Type&, const Foam::zero&)'
  128 | inline Type max(const Type& t, const zero&)
      |             ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/zeroI.H:128:13: note:   template argument deduction/substitution failed:
dragModels/Engelund/Engelund.C:77:21: note:   cannot convert '1.0e-3' (type 'double') to type 'const Foam::zero&'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                     ^~~~
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/one.H:110,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/UList.H:52,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/List.H:47,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/HashTable.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Istream.H:278,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/token.H:943,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/UILListIO.C:31,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/UILList.H:478,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/ILList.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/IDLList.H:37,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/entry.H:48,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dictionary.H:101,
                 from lnInclude/dragModel.H:40,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/oneI.H:123:29: note: candidate: 'constexpr const Foam::one& Foam::max(const Foam::one&, const Foam::one&)'
  123 | inline constexpr const one& max(const one& o, const one&) noexcept
      |                             ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/oneI.H:123:44: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'const Foam::one&'
  123 | inline constexpr const one& max(const one& o, const one&) noexcept
      |                                 ~~~~~~~~~~~^
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/oneI.H:129:13: note: candidate: 'template<class Type> Type Foam::max(const Foam::one&, const Type&)'
  129 | inline Type max(const one&, const Type& t) noexcept
      |             ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/oneI.H:129:13: note:   template argument deduction/substitution failed:
dragModels/Engelund/Engelund.C:77:16: note:   cannot convert 'Cds' (type 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'}) to type 'const Foam::one&'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                ^~~
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/one.H:110,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/UList.H:52,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/List.H:47,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/HashTable.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Istream.H:278,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/token.H:943,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/UILListIO.C:31,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/UILList.H:478,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/ILList.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/IDLList.H:37,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/entry.H:48,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dictionary.H:101,
                 from lnInclude/dragModel.H:40,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/oneI.H:135:13: note: candidate: 'template<class Type> Type Foam::max(const Type&, const Foam::one&)'
  135 | inline Type max(const Type& t, const one&) noexcept
      |             ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/oneI.H:135:13: note:   template argument deduction/substitution failed:
dragModels/Engelund/Engelund.C:77:21: note:   cannot convert '1.0e-3' (type 'double') to type 'const Foam::one&'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                     ^~~~
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/VectorSpace.H:276,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.H:54,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionSet.H:59,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from ../phaseModel/lnInclude/phaseModel.H:41,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/VectorSpaceI.H:648:13: note: candidate: 'template<class Form, class Cmpt, unsigned char Ncmpts> Form Foam::max(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, const Foam::VectorSpace<Form, Cmpt, Ncmpts>&)'
  648 | inline Form max
      |             ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/VectorSpaceI.H:648:13: note:   template argument deduction/substitution failed:
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::VectorSpace<Form, Cmpt, Ncmpts>'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/ListOps.H:52,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/UPstream.H:49,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.H:31,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.H:544,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionSet.H:59,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from ../phaseModel/lnInclude/phaseModel.H:41,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/HashSet.H:437:7: note: candidate: 'Foam::label Foam::max(const labelHashSet&, Foam::label)'
  437 | label max(const labelHashSet& set, label maxValue = labelMin);
      |       ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/HashSet.H:437:31: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'const labelHashSet&' {aka 'const Foam::HashSet<int, Foam::Hash<int> >&'}
  437 | label max(const labelHashSet& set, label maxValue = labelMin);
      |           ~~~~~~~~~~~~~~~~~~~~^~~
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.C:835,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.H:547,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionSet.H:59,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from ../phaseModel/lnInclude/phaseModel.H:41,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:373:6: note: candidate: 'template<class Type> Type Foam::max(const Foam::UList<T>&)'
  373 | Type max(const UList<Type>& f1)
      |      ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:373:6: note:   template argument deduction/substitution failed:
dragModels/Engelund/Engelund.C:77:25: note:   candidate expects 1 argument, 2 provided
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.C:835,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.H:547,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionSet.H:59,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from ../phaseModel/lnInclude/phaseModel.H:41,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:385:26: note: candidate: 'template<class Type> Type Foam::max(const Foam::tmp<Foam::Field<Type> >&)'
  385 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:365:12: note: in definition of macro 'TMP_UNARY_FUNCTION'
  365 | ReturnType Func(const tmp<Field<Type>>& tf1)                                   \
      |            ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:385:26: note:   template argument deduction/substitution failed:
  385 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:365:12: note: in definition of macro 'TMP_UNARY_FUNCTION'
  365 | ReturnType Func(const tmp<Field<Type>>& tf1)                                   \
      |            ^~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::tmp<Foam::Field<Type> >'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.C:835,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.H:547,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionSet.H:59,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from ../phaseModel/lnInclude/phaseModel.H:41,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note: candidate: 'template<class Type> void Foam::max(Foam::Field<Type>&, const Foam::UList<T>&, const Foam::UList<T>&)'
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:113:6: note: in definition of macro 'BINARY_FUNCTION_TRANSFORM'
  113 | void Func                                                                      \
      |      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro 'BINARY_FUNCTION'
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note:   template argument deduction/substitution failed:
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:113:6: note: in definition of macro 'BINARY_FUNCTION_TRANSFORM'
  113 | void Func                                                                      \
      |      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro 'BINARY_FUNCTION'
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   mismatched types 'const Foam::UList<T>' and 'double'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.C:835,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.H:547,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionSet.H:59,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from ../phaseModel/lnInclude/phaseModel.H:41,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note: candidate: 'template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::UList<T>&, const Foam::UList<T>&)'
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:129:24: note: in definition of macro 'BINARY_FUNCTION_INTERFACE'
  129 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro 'BINARY_FUNCTION'
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note:   template argument deduction/substitution failed:
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:129:24: note: in definition of macro 'BINARY_FUNCTION_INTERFACE'
  129 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro 'BINARY_FUNCTION'
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   mismatched types 'const Foam::UList<T>' and 'double'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.C:835,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.H:547,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionSet.H:59,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from ../phaseModel/lnInclude/phaseModel.H:41,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note: candidate: 'template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::UList<T>&, const Foam::tmp<Foam::Field<Type> >&)'
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:141:24: note: in definition of macro 'BINARY_FUNCTION_INTERFACE'
  141 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro 'BINARY_FUNCTION'
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note:   template argument deduction/substitution failed:
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:141:24: note: in definition of macro 'BINARY_FUNCTION_INTERFACE'
  141 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro 'BINARY_FUNCTION'
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   mismatched types 'const Foam::tmp<Foam::Field<Type> >' and 'double'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.C:835,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.H:547,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionSet.H:59,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from ../phaseModel/lnInclude/phaseModel.H:41,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note: candidate: 'template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::tmp<Foam::Field<Type> >&, const Foam::UList<T>&)'
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:154:24: note: in definition of macro 'BINARY_FUNCTION_INTERFACE'
  154 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro 'BINARY_FUNCTION'
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note:   template argument deduction/substitution failed:
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:154:24: note: in definition of macro 'BINARY_FUNCTION_INTERFACE'
  154 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro 'BINARY_FUNCTION'
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::tmp<Foam::Field<Type> >'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.C:835,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.H:547,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionSet.H:59,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from ../phaseModel/lnInclude/phaseModel.H:41,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note: candidate: 'template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::tmp<Foam::Field<Type> >&, const Foam::tmp<Foam::Field<Type> >&)'
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:167:24: note: in definition of macro 'BINARY_FUNCTION_INTERFACE'
  167 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro 'BINARY_FUNCTION'
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note:   template argument deduction/substitution failed:
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:167:24: note: in definition of macro 'BINARY_FUNCTION_INTERFACE'
  167 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro 'BINARY_FUNCTION'
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::tmp<Foam::Field<Type> >'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.C:835,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.H:547,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionSet.H:59,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from ../phaseModel/lnInclude/phaseModel.H:41,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note: candidate: 'template<class Type> void Foam::max(Foam::Field<Type>&, const Type&, const Foam::UList<T>&)'
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:190:6: note: in definition of macro 'BINARY_FUNCTION_TRANSFORM_SF'
  190 | void Func                                                                      \
      |      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro 'BINARY_TYPE_FUNCTION_SF'
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note:   template argument deduction/substitution failed:
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:190:6: note: in definition of macro 'BINARY_FUNCTION_TRANSFORM_SF'
  190 | void Func                                                                      \
      |      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro 'BINARY_TYPE_FUNCTION_SF'
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   deduced conflicting types for parameter 'const Type' ('float' and 'double')
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.C:835,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.H:547,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionSet.H:59,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from ../phaseModel/lnInclude/phaseModel.H:41,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note: candidate: 'template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Type&, const Foam::UList<T>&)'
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:206:24: note: in definition of macro 'BINARY_FUNCTION_INTERFACE_SF'
  206 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro 'BINARY_TYPE_FUNCTION_SF'
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note:   template argument deduction/substitution failed:
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:206:24: note: in definition of macro 'BINARY_FUNCTION_INTERFACE_SF'
  206 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro 'BINARY_TYPE_FUNCTION_SF'
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   mismatched types 'const Foam::UList<T>' and 'double'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.C:835,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.H:547,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionSet.H:59,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from ../phaseModel/lnInclude/phaseModel.H:41,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note: candidate: 'template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Type&, const Foam::tmp<Foam::Field<Type> >&)'
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:218:24: note: in definition of macro 'BINARY_FUNCTION_INTERFACE_SF'
  218 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro 'BINARY_TYPE_FUNCTION_SF'
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note:   template argument deduction/substitution failed:
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:218:24: note: in definition of macro 'BINARY_FUNCTION_INTERFACE_SF'
  218 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro 'BINARY_TYPE_FUNCTION_SF'
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   mismatched types 'const Foam::tmp<Foam::Field<Type> >' and 'double'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.C:835,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.H:547,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionSet.H:59,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from ../phaseModel/lnInclude/phaseModel.H:41,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note: candidate: 'template<class Type> void Foam::max(Foam::Field<Type>&, const Foam::UList<T>&, const Type&)'
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:238:6: note: in definition of macro 'BINARY_FUNCTION_TRANSFORM_FS'
  238 | void Func                                                                      \
      |      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro 'BINARY_TYPE_FUNCTION_FS'
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note:   template argument deduction/substitution failed:
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:238:6: note: in definition of macro 'BINARY_FUNCTION_TRANSFORM_FS'
  238 | void Func                                                                      \
      |      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro 'BINARY_TYPE_FUNCTION_FS'
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   mismatched types 'const Foam::UList<T>' and 'double'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.C:835,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.H:547,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionSet.H:59,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from ../phaseModel/lnInclude/phaseModel.H:41,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note: candidate: 'template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::UList<T>&, const Type&)'
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:254:24: note: in definition of macro 'BINARY_FUNCTION_INTERFACE_FS'
  254 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro 'BINARY_TYPE_FUNCTION_FS'
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note:   template argument deduction/substitution failed:
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:254:24: note: in definition of macro 'BINARY_FUNCTION_INTERFACE_FS'
  254 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro 'BINARY_TYPE_FUNCTION_FS'
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   deduced conflicting types for parameter 'const Type' ('float' and 'double')
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.C:835,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.H:547,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionSet.H:59,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from ../phaseModel/lnInclude/phaseModel.H:41,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note: candidate: 'template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::tmp<Foam::Field<Type> >&, const Type&)'
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:266:24: note: in definition of macro 'BINARY_FUNCTION_INTERFACE_FS'
  266 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro 'BINARY_TYPE_FUNCTION_FS'
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note:   template argument deduction/substitution failed:
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:266:24: note: in definition of macro 'BINARY_FUNCTION_INTERFACE_FS'
  266 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro 'BINARY_TYPE_FUNCTION_FS'
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::tmp<Foam::Field<Type> >'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/complex.H:376,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/tensor.H:52,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/symmTensor.H:50,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/fieldTypes.H:46,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/flipOp.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/mapDistributeBaseTemplates.C:31,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/mapDistributeBase.H:1222,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldMapper.H:38,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.C:29,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Field.H:547,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionSet.H:59,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from ../phaseModel/lnInclude/phaseModel.H:41,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/complexI.H:232:23: note: candidate: 'const Foam::complex& Foam::max(const Foam::complex&, const Foam::complex&)'
  232 | inline const complex& max(const complex& c1, const complex& c2)
      |                       ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/complexI.H:232:42: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'const Foam::complex&'
  232 | inline const complex& max(const complex& c1, const complex& c2)
      |                           ~~~~~~~~~~~~~~~^~
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from ../phaseModel/lnInclude/phaseModel.H:41,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionSet.H:358:14: note: candidate: 'Foam::dimensionSet Foam::max(const Foam::dimensionSet&, const Foam::dimensionSet&)'
  358 | dimensionSet max(const dimensionSet& a, const dimensionSet& b);
      |              ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionSet.H:358:38: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'const Foam::dimensionSet&'
  358 | dimensionSet max(const dimensionSet& a, const dimensionSet& b);
      |                  ~~~~~~~~~~~~~~~~~~~~^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Matrix.H:634,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/RectangularMatrix.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/scalarMatrices.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionSets.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionSet.H:437,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from ../phaseModel/lnInclude/phaseModel.H:41,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Matrix.C:714:13: note: candidate: 'template<class Form, class Type> const Type& Foam::max(const Foam::Matrix<Form, Type>&)'
  714 | const Type& max(const Matrix<Form, Type>& mat)
      |             ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/Matrix.C:714:13: note:   template argument deduction/substitution failed:
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::Matrix<Form, Type>'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedType.H:577,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from ../phaseModel/lnInclude/phaseModel.H:41,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedType.C:718:25: note: candidate: 'template<class Type> Foam::dimensioned<Type> Foam::max(const Foam::dimensioned<Type>&, const Foam::dimensioned<Type>&)'
  718 | Foam::dimensioned<Type> Foam::max
      |                         ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/dimensionedType.C:718:25: note:   template argument deduction/substitution failed:
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::dimensioned<Type>'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.H:47,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/orientedType.H:176:14: note: candidate: 'Foam::orientedType Foam::max(const Foam::orientedType&, const Foam::orientedType&)'
  176 | orientedType max(const orientedType& a, const orientedType& b);
      |              ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/orientedType.H:176:38: note:   no known conversion for argument 1 from 'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} to 'const Foam::orientedType&'
  176 | orientedType max(const orientedType& a, const orientedType& b);
      |                  ~~~~~~~~~~~~~~~~~~~~^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.C:611,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.H:626,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:300:32: note: candidate: 'template<class Type, class GeoMesh> Foam::dimensioned<Type> Foam::max(const Foam::DimensionedField<Type, GeoMesh>&)'
  300 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:276:25: note: in definition of macro 'UNARY_REDUCTION_FUNCTION'
  276 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:300:32: note:   template argument deduction/substitution failed:
  300 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:276:25: note: in definition of macro 'UNARY_REDUCTION_FUNCTION'
  276 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
dragModels/Engelund/Engelund.C:77:25: note:   candidate expects 1 argument, 2 provided
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.C:611,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.H:626,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:300:32: note: candidate: 'template<class Type, class GeoMesh> Foam::dimensioned<Type> Foam::max(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)'
  300 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:290:25: note: in definition of macro 'UNARY_REDUCTION_FUNCTION'
  290 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:300:32: note:   template argument deduction/substitution failed:
  300 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:290:25: note: in definition of macro 'UNARY_REDUCTION_FUNCTION'
  290 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.C:611,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.H:626,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note: candidate: 'template<class Type, class GeoMesh> void Foam::max(Foam::DimensionedField<Type, GeoMesh>&, const Foam::DimensionedField<Type, GeoMesh>&, const Foam::DimensionedField<Type, GeoMesh>&)'
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:150:6: note: in definition of macro 'BINARY_FUNCTION'
  150 | void Func                                                                      \
      |      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note:   template argument deduction/substitution failed:
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:150:6: note: in definition of macro 'BINARY_FUNCTION'
  150 | void Func                                                                      \
      |      ^~~~
dragModels/Engelund/Engelund.C:77:25: note:   mismatched types 'const Foam::DimensionedField<Type, GeoMesh>' and 'double'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.C:611,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.H:626,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note: candidate: 'template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::DimensionedField<Type, GeoMesh>&)'
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:163:44: note: in definition of macro 'BINARY_FUNCTION'
  163 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note:   template argument deduction/substitution failed:
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:163:44: note: in definition of macro 'BINARY_FUNCTION'
  163 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
dragModels/Engelund/Engelund.C:77:25: note:   mismatched types 'const Foam::DimensionedField<Type, GeoMesh>' and 'double'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.C:611,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.H:626,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note: candidate: 'template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)'
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:183:44: note: in definition of macro 'BINARY_FUNCTION'
  183 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note:   template argument deduction/substitution failed:
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:183:44: note: in definition of macro 'BINARY_FUNCTION'
  183 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
dragModels/Engelund/Engelund.C:77:25: note:   mismatched types 'const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >' and 'double'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.C:611,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.H:626,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note: candidate: 'template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::DimensionedField<Type, GeoMesh>&)'
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:206:44: note: in definition of macro 'BINARY_FUNCTION'
  206 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note:   template argument deduction/substitution failed:
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:206:44: note: in definition of macro 'BINARY_FUNCTION'
  206 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.C:611,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.H:626,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note: candidate: 'template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)'
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:229:44: note: in definition of macro 'BINARY_FUNCTION'
  229 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note:   template argument deduction/substitution failed:
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:229:44: note: in definition of macro 'BINARY_FUNCTION'
  229 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.C:611,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.H:626,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: 'template<class Type, class GeoMesh> void Foam::max(Foam::DimensionedField<Type, GeoMesh>&, const Foam::dimensioned<Type>&, const Foam::DimensionedField<Type, GeoMesh>&)'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:260:6: note: in definition of macro 'BINARY_TYPE_FUNCTION_SF'
  260 | void Func                                                                      \
      |      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:260:6: note: in definition of macro 'BINARY_TYPE_FUNCTION_SF'
  260 | void Func                                                                      \
      |      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   mismatched types 'const Foam::dimensioned<Type>' and 'double'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.C:611,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.H:626,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: 'template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::dimensioned<Type>&, const Foam::DimensionedField<Type, GeoMesh>&)'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:273:44: note: in definition of macro 'BINARY_TYPE_FUNCTION_SF'
  273 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:273:44: note: in definition of macro 'BINARY_TYPE_FUNCTION_SF'
  273 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::dimensioned<Type>'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.C:611,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.H:626,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: 'template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Type&, const Foam::DimensionedField<Type, GeoMesh>&)'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:293:44: note: in definition of macro 'BINARY_TYPE_FUNCTION_SF'
  293 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:293:44: note: in definition of macro 'BINARY_TYPE_FUNCTION_SF'
  293 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   mismatched types 'const Foam::DimensionedField<Type, GeoMesh>' and 'double'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.C:611,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.H:626,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: 'template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::dimensioned<Type>&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:304:44: note: in definition of macro 'BINARY_TYPE_FUNCTION_SF'
  304 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:304:44: note: in definition of macro 'BINARY_TYPE_FUNCTION_SF'
  304 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::dimensioned<Type>'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.C:611,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.H:626,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: 'template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Type&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:326:44: note: in definition of macro 'BINARY_TYPE_FUNCTION_SF'
  326 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:326:44: note: in definition of macro 'BINARY_TYPE_FUNCTION_SF'
  326 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   mismatched types 'const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >' and 'double'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.C:611,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.H:626,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: 'template<class Type, class GeoMesh> void Foam::max(Foam::DimensionedField<Type, GeoMesh>&, const Foam::DimensionedField<Type, GeoMesh>&, const Foam::dimensioned<Type>&)'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:339:6: note: in definition of macro 'BINARY_TYPE_FUNCTION_FS'
  339 | void Func                                                                      \
      |      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:339:6: note: in definition of macro 'BINARY_TYPE_FUNCTION_FS'
  339 | void Func                                                                      \
      |      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   mismatched types 'const Foam::DimensionedField<Type, GeoMesh>' and 'double'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.C:611,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.H:626,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: 'template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::dimensioned<Type>&)'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:352:44: note: in definition of macro 'BINARY_TYPE_FUNCTION_FS'
  352 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:352:44: note: in definition of macro 'BINARY_TYPE_FUNCTION_FS'
  352 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   mismatched types 'const Foam::dimensioned<Type>' and 'double'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.C:611,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.H:626,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: 'template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::DimensionedField<Type, GeoMesh>&, const Type&)'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:372:44: note: in definition of macro 'BINARY_TYPE_FUNCTION_FS'
  372 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:372:44: note: in definition of macro 'BINARY_TYPE_FUNCTION_FS'
  372 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   deduced conflicting types for parameter 'const Type' ('float' and 'double')
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.C:611,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.H:626,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: 'template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::dimensioned<Type>&)'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:383:44: note: in definition of macro 'BINARY_TYPE_FUNCTION_FS'
  383 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:383:44: note: in definition of macro 'BINARY_TYPE_FUNCTION_FS'
  383 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.C:611,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedField.H:626,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:42,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: 'template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Type&)'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:406:44: note: in definition of macro 'BINARY_TYPE_FUNCTION_FS'
  406 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:406:44: note: in definition of macro 'BINARY_TYPE_FUNCTION_FS'
  406 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldField.C:503,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldField.H:240,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:427:6: note: candidate: 'template<template<class> class Field, class Type> Type Foam::max(const Foam::FieldField<Field, Type>&)'
  427 | Type max(const FieldField<Field, Type>& f)
      |      ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:427:6: note:   template argument deduction/substitution failed:
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::FieldField<Field, Type>'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldField.C:503,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldField.H:240,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:445:26: note: candidate: 'template<template<class> class Field, class Type> Type Foam::max(const Foam::tmp<Foam::FieldField<Field, Type> >&)'
  445 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:419:12: note: in definition of macro 'TMP_UNARY_FUNCTION'
  419 | ReturnType Func(const tmp<FieldField<Field, Type>>& tf1)                       \
      |            ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:445:26: note:   template argument deduction/substitution failed:
  445 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:419:12: note: in definition of macro 'TMP_UNARY_FUNCTION'
  419 | ReturnType Func(const tmp<FieldField<Field, Type>>& tf1)                       \
      |            ^~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::tmp<Foam::FieldField<Field, Type> >'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldField.C:503,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldField.H:240,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note: candidate: 'template<template<class> class Field, class Type> void Foam::max(Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&)'
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:123:6: note: in definition of macro 'BINARY_FUNCTION'
  123 | void Func                                                                      \
      |      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note:   template argument deduction/substitution failed:
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:123:6: note: in definition of macro 'BINARY_FUNCTION'
  123 | void Func                                                                      \
      |      ^~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'Foam::FieldField<Field, Type>'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldField.C:503,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldField.H:240,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note: candidate: 'template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&)'
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:139:36: note: in definition of macro 'BINARY_FUNCTION'
  139 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note:   template argument deduction/substitution failed:
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:139:36: note: in definition of macro 'BINARY_FUNCTION'
  139 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::FieldField<Field, Type>'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldField.C:503,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldField.H:240,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note: candidate: 'template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::FieldField<Field, Type>&, const Foam::tmp<Foam::FieldField<Field, Type> >&)'
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:151:36: note: in definition of macro 'BINARY_FUNCTION'
  151 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note:   template argument deduction/substitution failed:
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:151:36: note: in definition of macro 'BINARY_FUNCTION'
  151 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::FieldField<Field, Type>'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldField.C:503,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldField.H:240,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note: candidate: 'template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Foam::FieldField<Field, Type>&)'
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:164:36: note: in definition of macro 'BINARY_FUNCTION'
  164 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note:   template argument deduction/substitution failed:
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:164:36: note: in definition of macro 'BINARY_FUNCTION'
  164 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::tmp<Foam::FieldField<Field, Type> >'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldField.C:503,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldField.H:240,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note: candidate: 'template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Foam::tmp<Foam::FieldField<Field, Type> >&)'
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:177:36: note: in definition of macro 'BINARY_FUNCTION'
  177 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note:   template argument deduction/substitution failed:
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:177:36: note: in definition of macro 'BINARY_FUNCTION'
  177 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::tmp<Foam::FieldField<Field, Type> >'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldField.C:503,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldField.H:240,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note: candidate: 'template<template<class> class Field, class Type> void Foam::max(Foam::FieldField<Field, Type>&, const Type&, const Foam::FieldField<Field, Type>&)'
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:200:6: note: in definition of macro 'BINARY_TYPE_FUNCTION_SF'
  200 | void Func                                                                      \
      |      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note:   template argument deduction/substitution failed:
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:200:6: note: in definition of macro 'BINARY_TYPE_FUNCTION_SF'
  200 | void Func                                                                      \
      |      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'Foam::FieldField<Field, Type>'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldField.C:503,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldField.H:240,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note: candidate: 'template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Type&, const Foam::FieldField<Field, Type>&)'
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:216:36: note: in definition of macro 'BINARY_TYPE_FUNCTION_SF'
  216 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note:   template argument deduction/substitution failed:
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:216:36: note: in definition of macro 'BINARY_TYPE_FUNCTION_SF'
  216 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   mismatched types 'const Foam::FieldField<Field, Type>' and 'double'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldField.C:503,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldField.H:240,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note: candidate: 'template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Type&, const Foam::tmp<Foam::FieldField<Field, Type> >&)'
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:228:36: note: in definition of macro 'BINARY_TYPE_FUNCTION_SF'
  228 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note:   template argument deduction/substitution failed:
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:228:36: note: in definition of macro 'BINARY_TYPE_FUNCTION_SF'
  228 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   mismatched types 'const Foam::tmp<Foam::FieldField<Field, Type> >' and 'double'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldField.C:503,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldField.H:240,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note: candidate: 'template<template<class> class Field, class Type> void Foam::max(Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&, const Type&)'
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:244:6: note: in definition of macro 'BINARY_TYPE_FUNCTION_FS'
  244 | void Func                                                                      \
      |      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note:   template argument deduction/substitution failed:
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:244:6: note: in definition of macro 'BINARY_TYPE_FUNCTION_FS'
  244 | void Func                                                                      \
      |      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'Foam::FieldField<Field, Type>'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldField.C:503,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldField.H:240,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note: candidate: 'template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::FieldField<Field, Type>&, const Type&)'
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:260:36: note: in definition of macro 'BINARY_TYPE_FUNCTION_FS'
  260 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note:   template argument deduction/substitution failed:
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:260:36: note: in definition of macro 'BINARY_TYPE_FUNCTION_FS'
  260 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::FieldField<Field, Type>'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldField.C:503,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldField.H:240,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:43,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note: candidate: 'template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Type&)'
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:272:36: note: in definition of macro 'BINARY_TYPE_FUNCTION_FS'
  272 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note:   template argument deduction/substitution failed:
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:272:36: note: in definition of macro 'BINARY_TYPE_FUNCTION_FS'
  272 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::tmp<Foam::FieldField<Field, Type> >'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/SolverPerformance.H:301,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/solverPerformance.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/meshState.H:47,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/polyMesh.H:61,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/globalMeshDataTemplates.C:30,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/globalMeshData.H:654,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:30,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:268,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/SolverPerformance.C:175:40: note: candidate: 'template<class Type> Foam::SolverPerformance<Type> Foam::max(const Foam::SolverPerformance<Type>&, const Foam::SolverPerformance<Type>&)'
  175 | typename Foam::SolverPerformance<Type> Foam::max
      |                                        ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/SolverPerformance.C:175:40: note:   template argument deduction/substitution failed:
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::SolverPerformance<Type>'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.C:1575,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:978,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:462:46: note: candidate: 'template<class Type, template<class> class PatchField, class GeoMesh> Foam::dimensioned<Type> Foam::max(const Foam::GeometricField<Type, PatchField, GeoMesh>&)'
  462 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:430:25: note: in definition of macro 'UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY'
  430 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:462:46: note:   template argument deduction/substitution failed:
  462 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:430:25: note: in definition of macro 'UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY'
  430 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
dragModels/Engelund/Engelund.C:77:25: note:   candidate expects 1 argument, 2 provided
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.C:1575,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:978,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:462:46: note: candidate: 'template<class Type, template<class> class PatchField, class GeoMesh> Foam::dimensioned<Type> Foam::max(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)'
  462 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:452:25: note: in definition of macro 'UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY'
  452 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:462:46: note:   template argument deduction/substitution failed:
  462 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:452:25: note: in definition of macro 'UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY'
  452 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.C:1575,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:978,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note: candidate: 'template<class Type, template<class> class PatchField, class GeoMesh> void Foam::max(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)'
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:167:6: note: in definition of macro 'BINARY_FUNCTION'
  167 | void Func                                                                      \
      |      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note:   template argument deduction/substitution failed:
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:167:6: note: in definition of macro 'BINARY_FUNCTION'
  167 | void Func                                                                      \
      |      ^~~~
dragModels/Engelund/Engelund.C:77:25: note:   mismatched types 'const Foam::GeometricField<Type, PatchField, GeoMesh>' and 'double'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.C:1575,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:978,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note: candidate: 'template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)'
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:196:54: note: in definition of macro 'BINARY_FUNCTION'
  196 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note:   template argument deduction/substitution failed:
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:196:54: note: in definition of macro 'BINARY_FUNCTION'
  196 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
dragModels/Engelund/Engelund.C:77:25: note:   mismatched types 'const Foam::GeometricField<Type, PatchField, GeoMesh>' and 'double'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.C:1575,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:978,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note: candidate: 'template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)'
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:216:54: note: in definition of macro 'BINARY_FUNCTION'
  216 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note:   template argument deduction/substitution failed:
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:216:54: note: in definition of macro 'BINARY_FUNCTION'
  216 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
dragModels/Engelund/Engelund.C:77:25: note:   mismatched types 'const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >' and 'double'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.C:1575,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:978,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note: candidate: 'template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)'
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:239:54: note: in definition of macro 'BINARY_FUNCTION'
  239 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note:   template argument deduction/substitution failed:
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:239:54: note: in definition of macro 'BINARY_FUNCTION'
  239 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.C:1575,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:978,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note: candidate: 'template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)'
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:262:54: note: in definition of macro 'BINARY_FUNCTION'
  262 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note:   template argument deduction/substitution failed:
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:262:54: note: in definition of macro 'BINARY_FUNCTION'
  262 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.C:1575,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:978,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: 'template<class Type, template<class> class PatchField, class GeoMesh> void Foam::max(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:294:6: note: in definition of macro 'BINARY_TYPE_FUNCTION_SF'
  294 | void Func                                                                      \
      |      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:294:6: note: in definition of macro 'BINARY_TYPE_FUNCTION_SF'
  294 | void Func                                                                      \
      |      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   mismatched types 'const Foam::dimensioned<Type>' and 'double'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.C:1575,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:978,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: 'template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::dimensioned<Type>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:313:54: note: in definition of macro 'BINARY_TYPE_FUNCTION_SF'
  313 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:313:54: note: in definition of macro 'BINARY_TYPE_FUNCTION_SF'
  313 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::dimensioned<Type>'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.C:1575,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:978,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: 'template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Type&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:333:54: note: in definition of macro 'BINARY_TYPE_FUNCTION_SF'
  333 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:333:54: note: in definition of macro 'BINARY_TYPE_FUNCTION_SF'
  333 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   mismatched types 'const Foam::GeometricField<Type, PatchField, GeoMesh>' and 'double'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.C:1575,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:978,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: 'template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::dimensioned<Type>&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:344:54: note: in definition of macro 'BINARY_TYPE_FUNCTION_SF'
  344 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:344:54: note: in definition of macro 'BINARY_TYPE_FUNCTION_SF'
  344 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::dimensioned<Type>'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.C:1575,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:978,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: 'template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Type&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:367:54: note: in definition of macro 'BINARY_TYPE_FUNCTION_SF'
  367 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:367:54: note: in definition of macro 'BINARY_TYPE_FUNCTION_SF'
  367 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   mismatched types 'const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >' and 'double'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.C:1575,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:978,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: 'template<class Type, template<class> class PatchField, class GeoMesh> void Foam::max(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&)'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:380:6: note: in definition of macro 'BINARY_TYPE_FUNCTION_FS'
  380 | void Func                                                                      \
      |      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:380:6: note: in definition of macro 'BINARY_TYPE_FUNCTION_FS'
  380 | void Func                                                                      \
      |      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   mismatched types 'const Foam::GeometricField<Type, PatchField, GeoMesh>' and 'double'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.C:1575,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:978,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: 'template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&)'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:399:54: note: in definition of macro 'BINARY_TYPE_FUNCTION_FS'
  399 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:399:54: note: in definition of macro 'BINARY_TYPE_FUNCTION_FS'
  399 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   mismatched types 'const Foam::dimensioned<Type>' and 'double'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.C:1575,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:978,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: 'template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Type&)'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:419:54: note: in definition of macro 'BINARY_TYPE_FUNCTION_FS'
  419 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:419:54: note: in definition of macro 'BINARY_TYPE_FUNCTION_FS'
  419 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   deduced conflicting types for parameter 'const Type' ('float' and 'double')
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.C:1575,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:978,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: 'template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::dimensioned<Type>&)'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:430:54: note: in definition of macro 'BINARY_TYPE_FUNCTION_FS'
  430 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:430:54: note: in definition of macro 'BINARY_TYPE_FUNCTION_FS'
  430 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
In file included from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.C:1575,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricField.H:978,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /opt/openfoam/2312plus/OpenFOAM-v2312/src/finiteVolume/lnInclude/volFields.H:39,
                 from ../phaseModel/lnInclude/phaseModel.H:42,
                 from lnInclude/dragModel.H:41,
                 from dragModels/Engelund/Engelund.H:41,
                 from dragModels/Engelund/Engelund.C:26:
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: 'template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Type&)'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:453:54: note: in definition of macro 'BINARY_TYPE_FUNCTION_FS'
  453 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:453:54: note: in definition of macro 'BINARY_TYPE_FUNCTION_FS'
  453 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/opt/openfoam/2312plus/OpenFOAM-v2312/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro 'BINARY_TYPE_FUNCTION'
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
dragModels/Engelund/Engelund.C:77:25: note:   'Foam::volScalarField' {aka 'Foam::GeometricField<float, Foam::fvPatchField, Foam::volMesh>'} is not derived from 'const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >'
   77 |     return max(Cds, 1e-3)*phaseb_.nu()*phaseb_.rho()/sqr(phasea_.d());
      |                         ^
make: *** [/opt/openfoam/2312plus/OpenFOAM-v2312/wmake/rules/General/transform:38: Make/linux64GccSPDPInt32Opt/dragModels/Engelund/Engelund.o] Error 1
+ wmake libso ppModel
+ wmake libso kineticTheoryModels
+ wmake libso granularRheologyModels
+ wmake
make: *** [/opt/openfoam/2312plus/OpenFOAM-v2312/wmake/rules/General/transform:38: Make/linux64GccSPDPInt32Opt/sedFoam.o] Interrupt
